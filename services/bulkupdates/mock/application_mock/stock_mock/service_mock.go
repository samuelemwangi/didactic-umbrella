// Code generated by MockGen. DO NOT EDIT.
// Source: application\stock\service.go

// Package stock_mock is a generated GoMock package.
package stock_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStockService is a mock of StockService interface.
type MockStockService struct {
	ctrl     *gomock.Controller
	recorder *MockStockServiceMockRecorder
}

// MockStockServiceMockRecorder is the mock recorder for MockStockService.
type MockStockServiceMockRecorder struct {
	mock *MockStockService
}

// NewMockStockService creates a new mock instance.
func NewMockStockService(ctrl *gomock.Controller) *MockStockService {
	mock := &MockStockService{ctrl: ctrl}
	mock.recorder = &MockStockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStockService) EXPECT() *MockStockServiceMockRecorder {
	return m.recorder
}

// SaveStock mocks base method.
func (m *MockStockService) SaveStock(arg0, arg1 uint, arg2 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveStock", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveStock indicates an expected call of SaveStock.
func (mr *MockStockServiceMockRecorder) SaveStock(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveStock", reflect.TypeOf((*MockStockService)(nil).SaveStock), arg0, arg1, arg2)
}
