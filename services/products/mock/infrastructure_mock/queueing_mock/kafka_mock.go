// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructure\queueing\kafka.go

// Package queueing_mock is a generated GoMock package.
package queueing_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKafkaProducer is a mock of KafkaProducer interface.
type MockKafkaProducer struct {
	ctrl     *gomock.Controller
	recorder *MockKafkaProducerMockRecorder
}

// MockKafkaProducerMockRecorder is the mock recorder for MockKafkaProducer.
type MockKafkaProducerMockRecorder struct {
	mock *MockKafkaProducer
}

// NewMockKafkaProducer creates a new mock instance.
func NewMockKafkaProducer(ctrl *gomock.Controller) *MockKafkaProducer {
	mock := &MockKafkaProducer{ctrl: ctrl}
	mock.recorder = &MockKafkaProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKafkaProducer) EXPECT() *MockKafkaProducerMockRecorder {
	return m.recorder
}

// ProduceMessage mocks base method.
func (m *MockKafkaProducer) ProduceMessage(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProduceMessage", arg0, arg1)
}

// ProduceMessage indicates an expected call of ProduceMessage.
func (mr *MockKafkaProducerMockRecorder) ProduceMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceMessage", reflect.TypeOf((*MockKafkaProducer)(nil).ProduceMessage), arg0, arg1)
}
